{"version":3,"file":"js/cart.0229e784.js","mappings":"q7EAyFA,IAAMA,GAAQC,EAAAA,EAAAA,MACRC,GAAgBC,EAAAA,EAAAA,IAAI,IAEpBC,GAAOC,EAAAA,EAAAA,KAAS,kBAAML,EAAMM,QAAQF,IAAI,IAKxCG,IAJWC,EAAAA,EAAAA,IAAO,aACPA,EAAAA,EAAAA,IAAO,YAGI,SAACC,GACzB,IAAMC,EAAe,IAAIC,IAWzB,OARAF,EAAQG,SAAQ,SAAAC,GACPH,EAAaI,IAAID,EAAKE,MACvBL,EAAaM,IAAIH,EAAKE,KAAGE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOJ,GAAI,IAAEK,MAAO,KAEjDR,EAAaS,IAAIN,EAAKE,KAAKG,OAAS,CACxC,IAGOE,MAAMC,KAAKX,EAAaY,SACnC,IAGAC,EAAAA,EAAAA,IAAMnB,GAAM,SAACK,GACTP,EAAcsB,MAAQjB,EAAoBE,EAC9C,GAAG,CAAEgB,WAAW,IAEhB,IAAMC,GAAQrB,EAAAA,EAAAA,KAAS,WACnB,OAAOD,EAAKoB,MAAMG,QAAO,SAACC,EAAKf,GAAI,OAAKe,EAAMf,EAAKgB,OAAShB,EAAKK,KAAK,GAAE,EAC5E,IAEMY,EAAiB,SAACjB,GACpBb,EAAM+B,SAAS,YAAalB,EAChC,EAEMmB,EAAiB,SAACnB,GACpBb,EAAM+B,SAAS,iBAAkBlB,EACrC,EAEMoB,EAAiB,SAACpB,GACpBb,EAAM+B,SAAS,qBAAsBlB,EACzC,EAEMqB,EAAY,WACdlC,EAAM+B,SAAS,YACnB,E,gtDCpIMI,EAAc,EAEpB,G","sources":["webpack://front-e-commerce/./src/views/CartView.vue","webpack://front-e-commerce/./src/views/CartView.vue?73a2"],"sourcesContent":["<template>\r\n    <div class=\"container mx-auto px-4\">\r\n        <h1 class=\"text-2xl font-semibold mb-4\">Carrito de Compras</h1>\r\n        <div class=\"flex flex-col md:flex-row gap-4\">\r\n            <div class=\"md:w-3/4\">\r\n                <div class=\"bg-white rounded-lg shadow-md p-6 mb-4\">\r\n                    <div class=\"overflow-x-auto\">\r\n                        <table class=\"w-full\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th class=\"text-center md:text-left font-semibold\">Producto</th>\r\n                                    <th class=\"text-center font-semibold\">Precio</th>\r\n                                    <th class=\"text-center font-semibold\">Cantidad</th>\r\n                                    <th class=\"text-center md:text-right font-semibold\">Total</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody id=\"cart-items\">\r\n                                <tr v-for=\"item in cart\" :key=\"item.id\" class=\"pb-4 border-b border-gray-300\">\r\n                                    <td class=\"px-1 py-4\">\r\n                                        <div class=\"flex items-center flex-col sm:flex-row text-center sm:text-left\">\r\n                                            <img class=\"h-16 w-16 md:h-24 md:w-24 sm:mr-8 mb-4 sm:mb-0\"\r\n                                                :src=\"item.fotos[0]\" alt=\"Product image\">\r\n                                            <p class=\"text-sm md:text-base md:font-semibold\">{{ item.nombre }}</p>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td class=\"px-1 py-4 text-center\">{{ item.nombre }}</td>\r\n                                    <td class=\"px-1 py-4 text-center\">\r\n                                        <div class=\"flex items-center justify-center\">\r\n                                            <button @click=\"decrementCount(item)\"\r\n                                                class=\"bg-red-500 text-white w-5 h-5 flex items-center justify-center rounded-full\">-</button>\r\n                                            <p class=\"quantity text-center w-8\">{{ item.count }}</p>\r\n                                            <button @click=\"incrementCount(item)\"\r\n                                                class=\"bg-green-500 text-white w-5 h-5 flex items-center justify-center rounded-full\">+</button>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td class=\"px-1 py-4 text-right\">${{ (item.precio * item.count).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.') }}</td>\r\n                                    <td class=\"px-1 py-4 text-right\"><button @click=\"removeFromCart(item)\">x</button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div class=\"px-1 flex flex-col lg:flex-row justify-between items-center mt-10\">\r\n                            <div class=\"flex items-center\">\r\n                                <input type=\"text\" placeholder=\"Coupon code\"\r\n                                    class=\"border border-gray-300 rounded-l-full py-2 px-4 focus:outline-none\">\r\n                                <button\r\n                                    class=\"bg-blue-500 text-slate-50 border border-blue-500 hover:bg-transparent hover:text-slate-950 rounded-full py-2 px-4\">Aplicar\r\n                                    Cupon</button>\r\n                            </div>\r\n                            <div class=\"mt-4 lg:mt-0 flex space-x-2\">\r\n                                <button @click=\"emptyCart\"\r\n                                    class=\"bg-blue-500 text-slate-50 border border-blue-500 hover:bg-transparent hover:text-slate-950 rounded-full py-2 px-4\">Vaciar\r\n                                    Carrito</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"md:w-1/4\">\r\n                <div class=\"bg-white rounded-lg shadow-md p-6\">\r\n                    <h2 class=\"text-lg font-semibold mb-4\">Resumen</h2>\r\n                    <div class=\"flex justify-between mb-4\">\r\n                        <p>Subtotal</p>\r\n                        <p>${{ total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.') }}</p>\r\n                    </div>\r\n                    <div class=\"flex justify-between mb-4\">\r\n                        <p>Impuestos</p>\r\n                        <p>$1.99</p>\r\n                    </div>\r\n                    <div class=\"flex justify-between mb-4 pb-4 border-b border-gray-300\">\r\n                        <p>Costo Envio</p>\r\n                        <p>$0.00</p>\r\n                    </div>\r\n                    <div class=\"flex justify-between mb-2\">\r\n                        <p class=\"font-semibold\">Total</p>\r\n                        <p class=\"font-semibold\">${{ Math.round(total + (total * 0.0199)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.') }}</p>\r\n                    </div>\r\n                    <a href=\"/checkout\"\r\n                        class=\"bg-blue-500 text-slate-50 border border-blue-500 hover:bg-transparent hover:text-slate-950 rounded-full py-2 px-4\">Pago</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, ref, inject, watch } from 'vue';\r\nimport { useStore } from 'vuex';\r\n\r\nconst store = useStore();\r\nconst cartWithCount = ref([]);\r\n\r\nconst cart = computed(() => store.getters.cart);\r\nconst showCart = inject('showCart');\r\nconst hideCart = inject('hideCart');\r\n\r\n// Add and update the count field on each cart item\r\nconst updateCartWithCount = (newCart) => {\r\n    const itemCountMap = new Map();\r\n\r\n    // Count occurrences of each item\r\n    newCart.forEach(item => {\r\n        if (!itemCountMap.has(item._id)) {\r\n            itemCountMap.set(item._id, { ...item, count: 0 });\r\n        }\r\n        itemCountMap.get(item._id).count += 1;\r\n    });\r\n\r\n    // Convert to array\r\n    return Array.from(itemCountMap.values());\r\n};\r\n\r\n// Watcher to update cartWithCount when cart changes\r\nwatch(cart, (newCart) => {\r\n    cartWithCount.value = updateCartWithCount(newCart);\r\n}, { immediate: true });\r\n\r\nconst total = computed(() => {\r\n    return cart.value.reduce((sum, item) => sum + item.precio * item.count, 0);\r\n});\r\n\r\nconst incrementCount = (item) => {\r\n    store.dispatch('addToCart', item);\r\n};\r\n\r\nconst decrementCount = (item) => {\r\n    store.dispatch('removeFromCart', item);\r\n};\r\n\r\nconst removeFromCart = (item) => {\r\n    store.dispatch('removeFromCartItem', item);\r\n};\r\n\r\nconst emptyCart = () => {\r\n    store.dispatch('emptyCart');\r\n};\r\n</script>","import script from \"./CartView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CartView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","cartWithCount","ref","cart","computed","getters","updateCartWithCount","inject","newCart","itemCountMap","Map","forEach","item","has","_id","set","_objectSpread","count","get","Array","from","values","watch","value","immediate","total","reduce","sum","precio","incrementCount","dispatch","decrementCount","removeFromCart","emptyCart","__exports__"],"sourceRoot":""}